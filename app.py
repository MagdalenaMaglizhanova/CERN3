import streamlit as st
import plotly.graph_objects as go
import numpy as np

st.set_page_config(page_title="–î–µ—Ç–µ–∫—Ç–æ—Ä–Ω–∞ —Å—Ç–∞—è", layout="wide")

st.title("üî¨ –î–µ—Ç–µ–∫—Ç–æ—Ä–Ω–∞ —Å—Ç–∞—è")

st.sidebar.header("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ —á–∞—Å—Ç–∏—Ü–∞—Ç–∞")

# –ò–∑–±–æ—Ä –Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
particle_type = st.sidebar.selectbox("–¢–∏–ø —á–∞—Å—Ç–∏—Ü–∞", ["–ï–ª–µ–∫—Ç—Ä–æ–Ω", "–ü—Ä–æ—Ç–æ–Ω", "–ú—é–æ–Ω"])
energy = st.sidebar.slider("–ï–Ω–µ—Ä–≥–∏—è (GeV)", 1, 100, 20)
angle_deg = st.sidebar.slider("–™–≥—ä–ª –Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ (–≥—Ä–∞–¥—É—Å–∏)", -45, 45, 0)

# –ü—Ä–µ—Å–º—è—Ç–∞–Ω–µ –Ω–∞ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏—è
angle_rad = np.radians(angle_deg)
z = np.linspace(0, 10, 100)
x = np.tan(angle_rad) * z
y = np.zeros_like(z)

# –¶–≤–µ—Ç–æ–≤–µ –ø–æ —Ç–∏–ø
colors = {"–ï–ª–µ–∫—Ç—Ä–æ–Ω": "blue", "–ü—Ä–æ—Ç–æ–Ω": "red", "–ú—é–æ–Ω": "green"}

fig = go.Figure()

# –î–æ–±–∞–≤—è–º–µ —Å–ª–æ–µ–≤–µ (–∫–∞–ª–æ—Ä–∏–º–µ—Ç—Ä–∏ –∏ –¥—Ä.)
layers = [2, 5, 8]
for layer in layers:
    fig.add_trace(go.Scatter3d(x=[-5, 5], y=[-5, 5], z=[layer, layer],
                               mode='lines',
                               line=dict(color='gray', width=2),
                               showlegend=False))

# –ß–∞—Å—Ç–∏—Ü–∞
fig.add_trace(go.Scatter3d(x=x, y=y, z=z, mode='lines',
                           name=f"{particle_type} ({energy} GeV)",
                           line=dict(width=4, color=colors[particle_type])))

# –¶–µ–Ω—Ç—ä—Ä –Ω–∞ —Å–±–ª—ä—Å—ä–∫
fig.add_trace(go.Scatter3d(x=[0], y=[0], z=[0], mode='markers',
                           marker=dict(size=5, color='black'),
                           name="–°–±–ª—ä—Å—ä–∫"))

fig.update_layout(
    scene=dict(xaxis_title="X", yaxis_title="Y", zaxis_title="Z"),
    height=700,
    title="üß≤ –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –¥–µ—Ç–µ–∫—Ç–æ—Ä",
)

st.plotly_chart(fig, use_container_width=True)

# –†–µ–∑—É–ª—Ç–∞—Ç/–∞–Ω–∞–ª–∏–∑
st.subheader("üìä –ê–Ω–∞–ª–∏–∑")

if particle_type == "–ï–ª–µ–∫—Ç—Ä–æ–Ω":
    st.write("–ï–ª–µ–∫—Ç—Ä–æ–Ω—ä—Ç —Å–µ –æ—Ç–∫–ª–æ–Ω—è–≤–∞ —Å–∏–ª–Ω–æ –æ—Ç –º–∞–≥–Ω–∏—Ç–Ω–æ—Ç–æ –ø–æ–ª–µ –∏ —Å–µ –∞–±—Å–æ—Ä–±–∏—Ä–∞ –æ—Ç –µ–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω–∏—è –∫–∞–ª–æ—Ä–∏–º–µ—Ç—ä—Ä.")
elif particle_type == "–ü—Ä–æ—Ç–æ–Ω":
    st.write("–ü—Ä–æ—Ç–æ–Ω—ä—Ç –ø—Ä–µ–º–∏–Ω–∞–≤–∞ –ø–æ-–¥–∏—Ä–µ–∫—Ç–Ω–æ –∏ –æ—Å—Ç–∞–≤—è —Å–ª–µ–¥–∞ –≤ —Ö–∞–¥–∞—Ä–æ–Ω–Ω–∏—è –∫–∞–ª–æ—Ä–∏–º–µ—Ç—ä—Ä.")
else:
    st.write("–ú—é–æ–Ω—ä—Ç –ø—Ä–µ–º–∏–Ω–∞–≤–∞ –ø—Ä–µ–∑ –≤—Å–∏—á–∫–∏ —Å–ª–æ–µ–≤–µ –∏ —Å–µ –æ—Ç–∫—Ä–∏–≤–∞ –≤ –º—é–æ–Ω–µ–Ω –¥–µ—Ç–µ–∫—Ç–æ—Ä.")

st.info("üß† –û–ø–∏—Ç–∞–π –¥–∞ –ø—Ä–æ–º–µ–Ω–∏—à –µ–Ω–µ—Ä–≥–∏—è—Ç–∞ –∏ —ä–≥—ä–ª–∞ –∏ –Ω–∞–±–ª—é–¥–∞–≤–∞–π –∫–∞–∫ —Å–µ –ø—Ä–æ–º–µ–Ω—è –¥–≤–∏–∂–µ–Ω–∏–µ—Ç–æ!")
